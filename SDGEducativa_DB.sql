CREATE DATABASE IF NOT EXISTS SDG_Educativa;
USE SDG_Educativa;

DROP TABLE IF EXISTS CARRERAS;
CREATE TABLE CARRERAS (
  id INT NOT NULL AUTO_INCREMENT,
  descripcion varchar(45) NOT NULL,
  CONSTRAINT PK_IdCarrera PRIMARY KEY(id)
);

DROP TABLE IF EXISTS MATERIAS;
CREATE TABLE MATERIAS (
  id INT NOT NULL AUTO_INCREMENT,
  descripcion varchar(30) NOT NULL,
  CONSTRAINT PK_IdMateria PRIMARY KEY(id) 
);

DROP TABLE IF EXISTS CARRERASxMATERIAS;
CREATE TABLE CARRERASxMATERIAS (
  id_Carrera INT NOT NULL,
  id_Materia INT NOT NULL ,
  CONSTRAINT FK_IdCarrera_cm FOREIGN KEY (id_Carrera) REFERENCES CARRERAS (Id) ON DELETE CASCADE ON UPDATE CASCADE,
  CONSTRAINT FK_IdMateria_cm FOREIGN KEY (id_Materia) REFERENCES MATERIAS (Id) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS PERSONAS;
CREATE TABLE PERSONAS (
  legajo INT NOT NULL AUTO_INCREMENT,
  dni VARCHAR(9) NOT NULL,
  nombre VARCHAR(30) NOT NULL,
  apellido VARCHAR(30) NOT NULL,
  fechaNacimiento DATE NULL,
  direccion VARCHAR(100) NULL,
  localidad VARCHAR(30) NULL,
  provincia VARCHAR(30) NULL,
  email VARCHAR(35) NOT NULL, 
  telefono VARCHAR(10) NOT NULL,
  estado BIT NOT NULL,
  CONSTRAINT PK_Legajo PRIMARY KEY(legajo)  
) AUTO_INCREMENT = 1000;

DROP TABLE IF EXISTS ALUMNOS;
CREATE TABLE ALUMNOS (
	id INT NOT NULL AUTO_INCREMENT,
    legajo_a INT NOT NULL,
    estado BIT NOT NULL,
    CONSTRAINT PK_IdAlumno PRIMARY KEY (id),
    CONSTRAINT FK_legajo_a FOREIGN KEY (legajo_a) REFERENCES PERSONAS (legajo) ON DELETE CASCADE ON UPDATE CASCADE    
);

DROP TABLE IF EXISTS LOGIN;
CREATE TABLE LOGIN (
	id INT NOT NULL AUTO_INCREMENT,
    userLogin VARCHAR(30) NOT NULL,
    password VARCHAR(30) NOT NULL,
    statusLogin BIT NULL,
    CONSTRAINT PK_IdLogin PRIMARY KEY (id)
);

DROP TABLE IF EXISTS DOCENTES;
CREATE TABLE DOCENTES (
	id INT NOT NULL AUTO_INCREMENT,
    legajo_d INT NOT NULL,
    login_d INT NULL,
    estado BIT NOT NULL,
    CONSTRAINT PK_IdDocente PRIMARY KEY (id),
    CONSTRAINT FK_legajo_d FOREIGN KEY (legajo_d) REFERENCES PERSONAS (legajo) ON DELETE CASCADE ON UPDATE CASCADE,
    CONSTRAINT FK_login_d FOREIGN KEY (login_d) REFERENCES LOGIN (id) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS ADMINISTRADOR;
CREATE TABLE ADMINISTRADOR(
	id INT NOT NULL AUTO_INCREMENT,
    nombre VARCHAR(30) NOT NULL,
    login_a INT NULL,
    CONSTRAINT PK_IdAdmin PRIMARY KEY (id),
    CONSTRAINT FK_login_a FOREIGN KEY (login_a) REFERENCES LOGIN (id) ON DELETE CASCADE ON UPDATE CASCADE
);

DROP TABLE IF EXISTS CONDICIONES;
CREATE TABLE CONDICIONES (
	id INT NOT NULL AUTO_INCREMENT,
    descripcion VARCHAR(15) NOT NULL,
    estado BIT NOT NULL,
    CONSTRAINT PK_IdCondicion PRIMARY KEY (id)
);

DROP TABLE IF EXISTS NOTAS;
CREATE TABLE NOTAS (
	id INT NOT NULL AUTO_INCREMENT,
    nota1 INT NULL,
    recuperatorio1 INT NULL,
    nota2 INT NULL,
    recuperatorio2 INT NULL, 
    id_Condicion INT NULL,
    CONSTRAINT PK_IdNota PRIMARY KEY (id),
    CONSTRAINT FK_IdCondicion FOREIGN KEY (id_Condicion) REFERENCES CONDICIONES (id)
);

DROP TABLE IF EXISTS TURNOS;
CREATE TABLE TURNOS (
	id INT NOT NULL AUTO_INCREMENT,
    descripcion VARCHAR(15) NOT NULL,
    estado BIT NOT NULL,
    CONSTRAINT PK_IdCondicion PRIMARY KEY (id)
);

DROP TABLE IF EXISTS CURSOS;
CREATE TABLE CURSOS (
	id INT NOT NULL AUTO_INCREMENT,
    descripcion VARCHAR(30) NULL,
    cuatrimestre VARCHAR(20) NOT NULL,
    a√±o INT NOT NULL,
    id_Turno INT NOT NULL,
    id_Alumno INT NOT NULL,
    id_Materia INT NOT NULL,
    id_Docente INT NOT NULL,
    id_Nota INT NOT NULL,
    CONSTRAINT PK_IdCurso PRIMARY KEY (id),
    CONSTRAINT FK_IdTurno FOREIGN KEY (id_Turno) REFERENCES TURNOS (id),
    CONSTRAINT FK_IdAlumno FOREIGN KEY (id_Alumno) REFERENCES ALUMNOS (id),
    CONSTRAINT FK_IdMateria FOREIGN KEY (id_Materia) REFERENCES MATERIAS (id),
    CONSTRAINT FK_IdDocente FOREIGN KEY (id_Docente) REFERENCES DOCENTES (id),
    CONSTRAINT FK_IdNota FOREIGN KEY (id_Nota) REFERENCES NOTAS (id)
);


